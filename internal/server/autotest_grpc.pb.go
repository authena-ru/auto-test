// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package server

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AutoTestServiceClient is the client API for AutoTestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AutoTestServiceClient interface {
	CheckAttemptToPassTestingTask(ctx context.Context, in *CheckAttemptRequest, opts ...grpc.CallOption) (*CheckAttemptResponse, error)
}

type autoTestServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAutoTestServiceClient(cc grpc.ClientConnInterface) AutoTestServiceClient {
	return &autoTestServiceClient{cc}
}

func (c *autoTestServiceClient) CheckAttemptToPassTestingTask(ctx context.Context, in *CheckAttemptRequest, opts ...grpc.CallOption) (*CheckAttemptResponse, error) {
	out := new(CheckAttemptResponse)
	err := c.cc.Invoke(ctx, "/autotest.AutoTestService/CheckAttemptToPassTestingTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AutoTestServiceServer is the server API for AutoTestService service.
// All implementations must embed UnimplementedAutoTestServiceServer
// for forward compatibility
type AutoTestServiceServer interface {
	CheckAttemptToPassTestingTask(context.Context, *CheckAttemptRequest) (*CheckAttemptResponse, error)
	mustEmbedUnimplementedAutoTestServiceServer()
}

// UnimplementedAutoTestServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAutoTestServiceServer struct {
}

func (UnimplementedAutoTestServiceServer) CheckAttemptToPassTestingTask(context.Context, *CheckAttemptRequest) (*CheckAttemptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAttemptToPassTestingTask not implemented")
}
func (UnimplementedAutoTestServiceServer) mustEmbedUnimplementedAutoTestServiceServer() {}

// UnsafeAutoTestServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AutoTestServiceServer will
// result in compilation errors.
type UnsafeAutoTestServiceServer interface {
	mustEmbedUnimplementedAutoTestServiceServer()
}

func RegisterAutoTestServiceServer(s grpc.ServiceRegistrar, srv AutoTestServiceServer) {
	s.RegisterService(&AutoTestService_ServiceDesc, srv)
}

func _AutoTestService_CheckAttemptToPassTestingTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAttemptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutoTestServiceServer).CheckAttemptToPassTestingTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autotest.AutoTestService/CheckAttemptToPassTestingTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutoTestServiceServer).CheckAttemptToPassTestingTask(ctx, req.(*CheckAttemptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AutoTestService_ServiceDesc is the grpc.ServiceDesc for AutoTestService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AutoTestService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "autotest.AutoTestService",
	HandlerType: (*AutoTestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAttemptToPassTestingTask",
			Handler:    _AutoTestService_CheckAttemptToPassTestingTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "autotest.proto",
}
